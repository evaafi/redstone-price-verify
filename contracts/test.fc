#include "imports/stdlib.fc";

() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {
}

(cell) check (slice data, slice data_pt2, slice sig) method_id {
  int v = sig~load_uint(8);
  int r = sig~load_uint(256);
  int s = sig~load_uint(256);
  ~dump(v);
  ~dump(r);
  ~dump(s);
  int hash_of_raw_data = keccak(data, data_pt2, 2);
  ~dump(hash_of_raw_data);
  int i = 0;
  var res = begin_cell().end_cell(); 
  while (i < 256){
    var (h, x1, x2, bool) = check_sig(hash_of_raw_data, i, r, s);
    if (bool == -1){
      ~dump(h);
      ~dump(x1);
      ~dump(x2);
      ~dump(i);
      i = 256;
      res = begin_cell().store_uint(h, 8).store_uint(x1, 256).store_uint(x2, 256).end_cell();
    }
    i += 1;
  }
  return res;
}
